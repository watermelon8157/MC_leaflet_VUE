@{
    ViewBag.Title = "List";
    Layout = Url.Content("~/Views/Layout/VIPLayout.cshtml");
}
<style>
    #fix-scroll .central_message {
        height: 36px;
    }

    .TYPE3 td {
        background-color: #f8e2e2;
    }

    .TYPE1 td {
        background-color: #dbecfc;
    }

    .TYPE2 td {
        background-color: rgb(218, 238, 188);
    }

    .warning_color {
        color: red;
    }

    .selectedRow > td {
        background-color: #ffdf61 !important;
    }

    /*Change the tooltip size*/
    div.tooltip-inner {
        max-width: none;
        white-space: nowrap;
    }
    
</style>
<script type="text/javascript">
    var viewPage = '@Model.viewPage';
    var status_table;
    $(document).ready(function () {
       
        status_table = $('#fix-scroll').bootstrapTable({
            url: "@Url.Content("~/VIP/FormStatusData")",
            method: 'post',
            queryParams:{before_day:2,patient_id:'@(Model.patient_id)'},
            pagination: true,
            toolbar: "#status_toolbar",
            buttonsClass: "raised",
            pageSize: 5,
            showRefresh: true,
            search: true,
            locale: "zh-TW",
            flat: true
        }).ready($("#fix-scroll").prev(".fixed-table-loading").css('top', '0px'));
        $("#fix-scroll").bootstrapTable('showLoading');
        $("#save_type_choose").change(function () {
            switch ($(this).val()) {
                case "%":
                    status_table.bootstrapTable("filterBy", "");
                    break;
                case "1":
                    status_table.bootstrapTable("filterBy", { 'rt_record.save_type': ["0", "1", "2", "5", "6"] });
                    break;
                case "3":
                    status_table.bootstrapTable("filterBy", { 'rt_record.save_type': "3" });
                    break;
            }
            $('#fix-scroll .central_message').css('height', $('#fix-scroll .central_message').css('height'));
        }).trigger("change");
    });
    //欄位顯示
    function merge_text(value, row, index) {
        var return_arr = new Array();
        //串接時的分隔符號
        var join_str = "";
        var field_arr = this.field.split("|");
        for (var i = 0; i < field_arr.length; i++) {
            switch (field_arr[i]) {
                case "onmode":
                    //On Mode狀態表示
                    if (row['onIntubate.hasData']) {
                        return_arr.push('<div class="onmode_1 onmode"></div>');
                    }
                    if (row['onBreath.hasData']) {
                        return_arr.push('<div class="onmode_2 onmode"></div>');
                    }
                    if (row['onOxygen.hasData']) {
                        return_arr.push('<div class="onmode_3 onmode"></div>');
                    }
                    break;
                case "rt_record.memo":
                    //備註
                    if (eval("row['" + field_arr[i] + "']") != null) {
                        var memo = eval("row['" + field_arr[i] + "']").replace(/\n/g, '<br/>');
                        return_arr.push('<span data-toggle="tooltip" data-original-title="' + memo + '">' + memo + '</span>');
                    }
                    break;
                case "central_message":
                    //備註
                    if (eval("row['" + field_arr[i] + "']") != null) {
                        var memo = eval("row['" + field_arr[i] + "']").replace(/\n/g, '<br/>');
                        return_arr.push('<span data-toggle="tooltip" data-original-title="' + memo + '">' + memo + '</span>');
                    }
                    break;
                case "rt_record.flow":
                    if (eval("row['" + field_arr[i] + "']") != "" && eval("row['" + field_arr[i] + "']") != null) {
                        return_arr.push(eval("row['" + field_arr[i] + "']") + "L");
                    }
                    break;
                default:
                    return_arr.push(eval("row['" + field_arr[i] + "']"));
                    join_str = "/";
                    break;
            }
        }
        return check_warning(return_arr.join(join_str), row, index, this);
    }

    //檢查bootstap table formatter數值異常
    function check_warning(value, row, index, _this) {
        //判斷無檢查參數直接回傳不處理
        try {
            if (typeof _this.warning_check === 'undefined')
                return value;
        } catch (e) {
            return value;
        }

        _this = _this == null ? this : _this;
        var return_text = new Array();
        //分割符號
        var text_split = _this.text_split;
        var split_value = new Array();
        if (text_split == undefined || text_split == "") {
            //無分割符號時
            split_value.push(value);
        } else {
            split_value = value.split(text_split);
        }
        //分割數值陣列數
        var split_len = split_value.length;

        //判斷檢查定義數量與數值數量是否相等
        if (split_value.length == _this.warning_check.length) {
            for (var i = 0; i < split_len; i++) {
                var warning_class = "";
                var input_v = split_value[i];
                if (_this.warning_check[i].list != "") {
                    //列舉檢查
                    if (_this.warning_check[i].list.indexOf(input_v) !== -1) {
                        //發現值
                        warning_class = "warning_color";
                    }
                    return_text.push('<span class="' + warning_class + '">' + input_v + '</span>');
                } else {
                    // 判斷非數值型態直接回傳不處理
                    if (isNaN(input_v)) {
                    } else {
                        if (!(_this.warning_check[i].min_v == 0 && _this.warning_check[i].max_v == 0) && !!input_v) {
                            //極限值檢查
                            var num = new Number(input_v);
                            input_v = num;
                            if (!(input_v >= _this.warning_check[i].min_v && input_v <= _this.warning_check[i].max_v)) {
                                //超出範圍
                                warning_class = "warning_color";
                            }
                        } else if (_this.warning_check[i].digit >= 0 && !!input_v) {
                            var num = new Number(input_v);
                            input_v = num;
                        }
                    }
                    return_text.push('<span class="' + warning_class + '">' + input_v + '</span>');
                }
            }
        }

        return return_text.join(text_split);
    }
    function rowStyle(row, index) {
        switch (row['rt_record.save_type']) {
            case "3":
                return {
                    classes: 'TYPE3'
                };
                break;
            case "1":
                return {
                    classes: 'TYPE2'
                };
                break;
            default:
                return {
                    classes: 'TYPE1'
                };
                break;
        }
    }

</script>
<div class="page  fade in" id="List">
    @*<div class="container-fluid nav-tabs">
        <div class="navbar-text">
            病歷號碼:<label>@Model.patient_id</label>&nbsp;
        </div>
        <ul class="nav navbar-nav nav-tabs navbar-right navbar-default">
            <li class="active"><a data-toggle="tab" href="#List"><i class="fa fa-file-text" aria-hidden="true"></i>呼吸器狀態</a></li>
        </ul>
    </div>*@
    <div class="page-container">
        <div id="List" class="tab-pane fade in active panel">
            <div id="status_toolbar" class="extra_function">
                <ul class="show_head" style="display:inline-flex;">
                    <li>病歷號碼:<label>@Model.patient_id</label></li>
                    <li>
                        <div class="input-group" style="width: 160px; height:34px;">
                            <span class="input-group-addon"><span class="glyphicon glyphicon-tags"></span>&nbsp;分類</span>
                            <select id="save_type_choose" class="form-control" style="height 34px;">
                                <option value="%">全部</option>
                                <option value="1" selected>一般</option>
                                <option value="3">警告</option>
                            </select>
                        </div>
                    </li>
                    <li style="background: #dbecfc; height:34px;">一般(其它)</li>
                    <li style="background: rgb(218, 238, 188); height:34px;">一般(手動輸入)</li>
                    <li style="background: #f8e2e2; height:34px;">警告</li>
                </ul>
            </div>
            <section class="flip-scroll" id="savetypeset">
                <div id="showTable">
                    <table class="table table-hover table-bordered table-striped table-condensed" id="fix-scroll" data-row-style="rowStyle">
                        <thead>
                            <tr>
                                <th data-field="RECORDDATE" data-formatter="merge_text" data-sortable="true">記&emsp;錄&emsp;時&emsp;間</th>
                                <th data-field="rt_record.device|rt_record.device_o2" data-formatter="merge_text">Ventilator Type / O<sub>2</sub> equipment</th>
                                <th data-field="rt_record.mode" data-formatter="merge_text">Ventilation Mode</th>
                                <th data-field="rt_record.vt_set|rt_record.vt" data-formatter="merge_text">Tidal Volume set / monitor</th>
                                <th data-field="rt_record.vr_set|rt_record.vr" data-formatter="merge_text" data-text_split="/" data-warning_check='[{"digit":0,"min_v":0,"max_v":0,"list":""},{"digit":0,"min_v":0,"max_v":0,"list":""}]'>Ventilation rate set / total</th>
                                <th data-field="rt_record.insp_time|rt_record.ie_ratio" data-formatter="merge_text" data-text_split="/" data-warning_check='[{"digit":1,"min_v":0,"max_v":1,"list":""},{"digit":"","min_v":"","max_v":"","list":["1:1","1.5:1","2:1","2.5:1","3:1"]}]'>Inspiratory Time / I:E ratio</th>
                                <th data-field="rt_record.flow" data-formatter="merge_text">Flow</th>
                                <th data-field="rt_record.mv_set|rt_record.mv" data-formatter="merge_text">Minute Volume set / total</th>
                                <th data-field="rt_record.pressure_peak|rt_record.pressure_plateau" data-formatter="merge_text">Pressure Peak / Plateau</th>
                                <th data-field="rt_record.pressure_mean|rt_record.pressure_peep" data-formatter="merge_text" data-text_split="/" data-warning_check='[{"digit":0,"min_v":0,"max_v":0,"list":""},{"digit":1,"min_v":1,"max_v":9,"list":""}]'>Pressure Mean / PEEP</th>
                                <th data-field="rt_record.pressure_ps|rt_record.pressure_pc" data-formatter="merge_text" data-text_split="/" data-warning_check='[{"digit":1,"min_v":0,"max_v":30,"list":""},{"digit":1,"min_v":0,"max_v":30,"list":""}]'>Pressure PS / PC (△P)</th>
                                <th data-field="rt_record.e_sense|rt_record.rise_time" data-formatter="merge_text">E sense / rise time</th>
                                <th data-field="rt_record.thigh|rt_record.tlow" data-formatter="merge_text">Time High / Time Low</th>
                                <th data-field="rt_record.humi_temp" data-formatter="merge_text">Temperature (°C)</th>
                                <th data-field="rt_record.fio2_set|rt_record.fio2_measured" data-formatter="merge_text" data-warning_check='[{"digit":1,"min_v":21,"max_v":55,"list":""}]'>FiO<sub>2</sub>(%) / Measured</th>
                                <th data-field="rt_record.low_mv_alarm|rt_record.paw_alarm" data-formatter="merge_text" data-text_split="/" data-warning_check='[{"digit":1,"min_v":0,"max_v":0,"list":""},{"digit":1,"min_v":25,"max_v":55,"list":""}]'>Low M.V alarm / Paw alarm</th>
                                <th data-field="rt_record.pressure_sensitivity|rt_record.sensitivity_flow" data-formatter="merge_text">Sensitivity (Pressure / flow)</th>
                                <th data-field="rt_record.phigh|rt_record.plow" data-formatter="merge_text">Pressure High / Pressure Low</th>
                                <th data-field="rt_record.spo2|rt_record.etco2" data-formatter="merge_text">SPO<sub>2</sub> / End Tidal CO<sub>2</sub></th>
                                <th data-field="rt_record.pr" data-formatter="merge_text">Pulse rate</th>
                                <th data-field="rt_record.bps|rt_record.bpd" data-formatter="merge_text">BP (mmHg)</th>
                                <th data-field="rt_record.et_size|rt_record.et_mark" data-formatter="merge_text">Endotracheal tubes size / mark</th>
                                <th data-field="rt_record.cuff" data-formatter="merge_text">Cuff pressure (cmH2O)</th>
                                <th data-field="rt_record.gcse|rt_record.gcsv|rt_record.gcsm" data-formatter="merge_text">GCS</th>
                                <th data-field="rt_record.breath_sound" data-formatter="merge_text">Breath sound</th>
                                <th data-field="central_message" data-formatter="merge_text" data-class="central_message">警示訊息</th>
                            <tr>
                        </thead>
                    </table>
                </div>
            </section>
        </div>
    </div>
</div>
