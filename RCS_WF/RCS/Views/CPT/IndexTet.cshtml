@{
    List<SelectListItem> ipdnoList = (List<SelectListItem>)ViewData["getPatientHistoryList"];
    string sDate = DateTime.Now.Date.AddDays(-6).ToString("yyyy-MM-dd HH:mm");
    sDate = "2014-11-01 10:28";
    string eDate = DateTime.Now.Date.ToString("yyyy-MM-dd 23:59");
}
<style type="text/css">
    /*Change the tooltip size*/
    div.tooltip-inner {
        max-width: none;
        white-space: nowrap;
        text-align: left;
    }

    .tooltip-inner > tbody > tr > td {
        text-align: left;
    }
</style>

<script type="text/javascript">
    var tempRow = [];
    var CPT_Assess_table;

    $(document).ready(function () {
        CPT_Assess_table = $("#CPT_Assess_table").bootstrapTable({
            url: "@Url.Content("~/CPT/getIndexTet")",
            cache: false,
            queryParams: function (p) {
                return { pSDate: $('#txt_wa_start_date').val(), pEDate: $('#txt_wa_end_date').val() };
            },
            pagination: true,
            method: "post",
            sortName: 'cpt_date',
            sortOrder: 'desc',
            pageSize: 6,
            pageList: [6],
            toolbar: "#CPT_toolbar",
            formatNoMatches: function () { return "目前無資料"; }
        }).on('click-row.bs.table', function (e, row, $element) {
            var nowRow = {};
            nowRow['cpt_id'] = row.cpt_id;
            nowRow['cpt_date'] = row.cpt_date;
            openRecordView('showCPTForm', '@Url.Content("~/CPT/OpenCPTindexTetForm")', nowRow);
        }).on('reset-view.bs.table', function () {
            //設定tooltip對齊table START
            var $tr = $('#CPT_Assess_table').find('tr');
            var hlist = [];
            $tr.each(function () {
                if ($(this).attr('data-index') != undefined) {
                    var $td = $(this).find('td');
                    $td.each(function () {
                        //
                        var spp = $(this).find('span.height_count').length;
                        var $class = $(this).attr('class');
                        if ($class != undefined) {
                            var $html = $(this).html();
                            if ($class == 'treatment' || $class == 'conscious') {
                                $(this).attr('data-toggle', 'tooltipB');
                            } else {
                                $(this).attr('data-toggle', 'tooltip');
                            }
                            $(this).attr('data-original-title', $html);

                            var h = spp * 22 < 36 ? 36 : spp * 22;
                            if (hlist[$class] == undefined || hlist[$class] == null || hlist[$class] < h) {
                                hlist[$class] = h;
                            }
                        }
                    });
                }
            });
            $('#CPT_Assess_table').find('th, td').each(function () {
                var $cls = $(this).attr('class');
                $(this).css('height', hlist[$cls] + 'px');
            });
        });
        $(".cpt_func_panel > button[exec_func]").click(function () {
            var this_btn = $(this);
            var cpt_json_data = getJsonObject('cpt_assess_form');
            switch ($(this).attr("exec_func")) {
                case 'add':
                    openRecordView('showCPTForm', '@Url.Content("~/CPT/OpenCPTindexTetForm")', null, this_btn);
                    break;
                case "next":
                    $("#CPT_Assess_table").hide('slide', { direction: 'left', easing: "easeOutQuint" }, 300, function () {
                        CPT_Assess_table.bootstrapTable("nextPage");
                        $("#CPT_Assess_table").show('slide', { direction: 'right', easing: "easeOutQuint" }, 300);
                    });
                    break;
                case "pre":
                    $("#CPT_Assess_table").hide('slide', { direction: 'right', easing: "easeOutQuint" }, 300, function () {
                        CPT_Assess_table.bootstrapTable("prevPage");
                        $("#CPT_Assess_table").show('slide', { direction: 'left', easing: "easeOutQuint" }, 300);
                    });
                    break;
                case "print":
                    isPrintSumit = true;
                    win = window.open('about:blank', 'TheNewWindow');
                    $.ajax({
                        url: '@Url.Content("~/CPT/cpt_page")',
                        data: { cpt_id: "" },
                        type: 'POST',
                        success: function (data) {
                            $("#cpt_pdf_blank_form #HtmlStrCXR2").val(data);
                            $("#cpt_pdf_blank_form")[0].submit();
                        },
                        error: function (jqXHR) {
                            log(jqXHR);
                        },
                        complete: function () {
                        }
                    });


                    break;
                case "print_key":
                    isPrintSumit = true;
                    win = window.open('about:blank', 'TheNewWindow');
                    $.ajax({
                        url: '@Url.Content("~/CPT/cpt_page")',
                        data: { cpt_id: $('#print_key').val() },
                        type: 'POST',
                        success: function (data) {
                            $("#cpt_pdf_blank_form #HtmlStrCXR2").val(data);
                            $("#cpt_pdf_blank_form")[0].submit();
                        },
                        error: function (jqXHR) {
                            log(jqXHR);
                        },
                        complete: function () {
                        }
                    });
                    break;
            } return false;
        });
        setRecodRule("#CPT_toolbar", true, type_mode);

    });
    function cpt_merge_text(value, row, index) {

        var re_html = new Array();
        var field = this.field;
        switch (field) {
            case 'brief_status':
                for (var i in value) {

                    if (value[i].val) {
                        if (value[i].id == 'tube_time')
                            re_html.push('<span  class="height_count pull-left" >插管時間：' + '(' + value[i].val + ')</span>');
                        if (value[i].id == 'tube_width')
                            re_html.push('<span  class="height_count pull-left" >ETT 管徑：' + '(' + value[i].val + ')</span>');
                        if (value[i].id == 'tube_deep')
                            re_html.push('<span  class="height_count pull-left" >深度：' + '(' + value[i].val + ')</span>');
                        if (value[i].id == 'shiley_time')
                            re_html.push('<span  class="height_count pull-left" >氣切時間：' + '(' + value[i].val + ')</span>');
                        if (value[i].id == 'shiley_width')
                            re_html.push('<span  class="height_count pull-left" >Tr. 管徑：' + '(' + value[i].val + ')</span>');
                        if (value[i].id == 'shiley_kind')
                            re_html.push('<span  class="height_count pull-left" >廠牌：' + '(' + value[i].val + ')</span>'); 
                    }  
                }
                break;
            case 'brief_status2':
                if (!!row['brief_status']) {
                    for (var i in row['brief_status']) {
                        if (row['brief_status'][i].val) {
                            if (row['brief_status'][i].id == 'rt_start_time')
                                re_html.push('<span  class="height_count pull-left" >' + row['brief_status'][i].val + '</span>');
                            if (row['brief_status'][i].id == 'rt_start_respirator_model')
                                re_html.push('<span  class="height_count pull-left" >機型：' + '(' + row['brief_status'][i].val + ')</span>');
                            if (row['brief_status'][i].id == 'rt_start_if')
                                re_html.push('<span  class="height_count pull-left" >介面：' + '(' + row['brief_status'][i].val + ')</span>');
                            if (row['brief_status'][i].id == 'rt_start_model_1')
                                re_html.push('<span  class="height_count pull-left" >模式：' + '(' + row['brief_status'][i].val + ')</span>');
                        }
                    }

                } 
                break;
            case 'breath_sound':
                for (var i in value) {
                    if (value[i].chkd) {
                        let addTxt = value[i].val
                        if (addTxt === '1') {
                            addTxt = 'bilateral'
                        } else if (addTxt === '2') {
                            addTxt = 'RUL'
                        } else if (addTxt === '3') {
                            addTxt = 'RML'
                        } else if (addTxt === '4') {
                            addTxt = 'RLL'
                        } else if (addTxt === '5') {
                            addTxt = 'LUL'
                        } else if (addTxt === '6') {
                            addTxt = 'LLL'
                        }
                        re_html.push('<span class="height_count pull-left">' + addTxt + '</span>');
                    }  
                }
                break;
            case 'rt_reason':
                for (var i in value) {
                    if (value[i].chkd) {
                        re_html.push('<span class="height_count pull-left">' + value[i].txt + '</span>');
                    } else {
                        if (value[i].id == 'rt_reason_Post')
                            re_html.push('<span  class="height_count pull-left" >' + '(' + value[i].val + ')</span>');
                        if (value[i].id == 'rt_reason_other')
                            re_html.push('<span  class="height_count pull-left" >' + '(' + value[i].val + ')</span>');
                    }
                }
                break;
            case 'cpt_history':
            case 'abg_data':
            case 'pat_problem':
                for (var i in value) {
                    if (value[i].chkd) {
                        if (value[i].txt == '其他')
                            re_html.push('<span class="height_count pull-left">' + value[i].txt + '(' + value[value.length - 1].val + ')</span>');
                        else
                            re_html.push('<span class="height_count pull-left">' + value[i].txt + '</span>');
                    }
                }
                break;
            case 'smoke_history':
            case 'skin':
            case 'cough':
                for (var i in value) {
                    if (value[i].chkd) {
                        re_html.push('<span class="height_count pull-left">' + value[i].txt + '</span>');
                    }
                }
                break; 
            case 'operation':
            case 'operation_memo':
            case 'sputum':
            case 'sputum_assess':
                for (var i in value) {
                    if (value[i].val) {
                        re_html.push('<span class="height_count pull-left">' + value[i].val + '</span>');
                    } 
                }
                break;
            case 'hocus':
            case 'lung':
                for (var i in value) {
                    if (value[i].chkd) {
                        if (value[value.length - 1].val != undefined || value[value.length - 1].val != null)
                            re_html.push('<span class="height_count pull-left">' + value[i].txt + '(' + value[value.length - 1].val + '小時)</span>');
                        else
                            re_html.push('<span class="height_count pull-left">' + value[i].txt + '</span>');
                    }
                }
                break;
            case 'base_data':
                //var tempV0 = value[0].txt
                //var tempV1 = value[1].txt
                //var tempV2 = value[2].txt
                //var tempV3 = value[3].txt
                //var tempV4 = value[4].txt
                //var value0 = tempV0 == null ? '' : tempV0;
                //var value1 = tempV1 == null ? '' : tempV1;
                //var value2 = tempV2 == null ? '' : tempV2;
                //var value3 = tempV3 == null ? '' : tempV3;
                //var value4 = tempV4 == null ? '' : tempV4;
                //if(value0!=''&&value1!=''&&value2!=''){
                //    re_html.push('<span class="height_count pull-left"">' + '體溫: ' + value0 + '</span>');
                //    re_html.push('<span class="height_count pull-left"">' + '脈膊: ' + value1 + '</span>');
                //    re_html.push('<span class="height_count pull-left"">' + '呼吸: ' + value2 + '</span>');
                //    re_html.push('<span class="height_count pull-left"">' + 'BP: ' + value3 + '/' + value4 + '</span>');
                //}
                break;
            case 'conscious': 
                for (var i in value) {
                    if (value[i].val) {
                        if (value[i].id == 'cpt_ass_conscious_4')
                            re_html.push('<span  class="height_count pull-left " >GCS E' + value[i].val + '</span>');
                        if (value[i].id == 'cpt_ass_conscious_5')
                            re_html.push('<span  class="height_count pull-left " >GCS V' + value[i].val + '</span>');
                        if (value[i].id == 'cpt_ass_conscious_6')
                            re_html.push('<span  class="height_count pull-left " >GCS M' + value[i].val + '</span>');
                        if (value[i].id == 'cpt_ass_conscious_1')
                            re_html.push('<span  class="height_count pull-left" >' + value[i].val + '</span>');
                        if (value[i].id == 'body_height')
                            re_html.push('<span  class="height_count pull-left" >身高 ' + value[i].val + '</span>');
                        if (value[i].id == 'body_weight')
                            re_html.push('<span  class="height_count pull-left" >體重 ' + value[i].val + '</span>');
                        if (value[i].id == 'f_body_weight')
                            re_html.push('<span  class="height_count pull-left" >IBW ' + value[i].val + '</span>'); 
                    }
                } 
                break;
            case 'tube':
                for (var i in value) {
                    if (value[i].chkd) {
                        re_html.push('<span class="height_count pull-left">' + value[i].txt + '</span>');
                        if (!!value[3].txt ) {
                            re_html.push('<span class="height_count pull-left"">' + 'Size ' + value[3].txt + '</span>');
                        }
                        if (!!value[4].txt ) {
                            re_html.push('<span class="height_count pull-left"">' + 'Position ' + value[4].txt + '</span>');
                        }
                    }
                }
                break;
            case 'machine':
                for (var i in value) {
                    if (value[i].chkd) {
                        if (value[i].txt == '是')
                            if (value[1].txt != null)
                                re_html.push('<span class="height_count pull-left">' + value[i].txt + '，機型' + '(' + value[1].val + ')</span>');
                            else
                                re_html.push('<span class="height_count pull-left">' + value[i].txt + '</span>');
                        else
                            re_html.push('<span class="height_count pull-left">' + value[i].txt + '</span>');
                    }
                }

                break;
            case 'patterns':
                for (var i in value) {
                    if (value[i].chkd) {
                        if (value[i].txt == '其他')
                            if (value[9]!=undefined && value[9].txt != null)
                                re_html.push('<span class="height_count pull-left">' + value[i].txt + '(' + value[value.length - 1].val + ')</span>');
                            else
                                re_html.push('<span class="height_count pull-left">' + value[i].txt + '</span>');
                        else
                            re_html.push('<span class="height_count pull-left">' + value[i].txt + '</span>');
                    }
                }
                //if (value[8].chkd)
                //    re_html.push('<span ">' + value[9].txt + '</span>');
                break;
            case 'atelectasis':
                for (var i in value) {
                    if (value[i].chkd) {
                        if (value[i].txt == '其他')
                            re_html.push('<span class="height_count pull-left">' + value[i].txt + '(' + value[value.length - 1].val + ')</span>');
                        else
                            re_html.push('<span class="height_count pull-left">' + value[i].txt + '</span>');
                    }
                }
                break;

            default:
                if (value) {
                    re_html.push('<span class="height_count pull-left">' + value + '</span>');
                } else {
                    re_html.push('<span class="height_count pull-left">-</span>'); 
                }
                break;
        }
        return re_html.join("<br />");;
    }
    function showDateFormat1(value, row, index) {
        var returnVal = value;
        //returnVal = '<span class="glyphicon glyphicon-ok" style="color:#5CB85C;"></span>';
        return returnVal;
    }
</script>


<div id="showCPTForm"></div><!-- 預入CPT記錄單 showCPTForm -->
<div id="tk_date_time_dom" style="position:relative;"></div>
<div>
    <div class="btn-group col-*-6">
      
    </div>
    <section class="flip-scroll">
        <!-- 評估單功能區 -->
        <div id="CPT_toolbar" class="cpt_func_panel">
            &emsp;<button class="btn btn-default" exec_func="add" not_full="true" newBtn><span class="glyphicon glyphicon-plus"></span> 新增呼吸治療評估單</button> &emsp;
            <button class="btn btn-default" exec_func="pre"><span class="glyphicon glyphicon-arrow-left"></span> 上一頁</button>
            <button class="btn btn-default" exec_func="next"><span class="glyphicon glyphicon-arrow-right"></span> 下一頁</button> &emsp;
            <input type="text" class="form-control dt-picker searchSDate" style="width: 140px; height: 27px; display: inline;vertical-align:middle;" dt-format="dt" dt-sidebyside="true" dt-widgetparent="tk_date_time_dom" id="txt_wa_start_date" name="txt_wa_start_date" value="@sDate" placeholder="" readonly="" notlock>~
            <input type="text" class="form-control dt-picker searchEDate" style="width: 140px; height: 27px; display: inline;vertical-align:middle;" dt-format="dt" dt-sidebyside="true" dt-widgetparent="tk_date_time_dom" id="txt_wa_end_date" name="txt_wa_end_date" value="@eDate" placeholder="" readonly="" notlock>
            @*@Html.DropDownList("setIpdno", ipdnoList, new { @onchange = "changeFeeNo($(this),'CPT_toolbar');", @notlock = "" })*@
            &emsp;<input type="button" class="btn btn-default listSearch" id="btn_cpt_search" value="搜尋" onclick="$('#CPT_Assess_table').bootstrapTable('refresh');" notlock />
            <button class="btn btn-default" exec_func="print" not_full="true"><span class="glyphicon glyphicon-print"></span> 列印空白單</button> &emsp;
            @if (RCS.Controllers.BaseController.isDebuggerMode)
            {
                <button class="btn btn-default" exec_func="print_key" not_full="true"><span class="glyphicon glyphicon-print"></span> 列印</button>
                @:&emsp;
                <input type="text" class="form-control" style="width: 140px; height: 27px; display: inline;vertical-align:middle;" id="print_key" name="print_key" value="">
            } 
        </div>
        <!-- 清單顯示區域 -->
        <table data-toggle="table" class="table table-bordered table-striped table-condensed" id="CPT_Assess_table">
            <thead>
                <tr>
                    <th data-field="record_date" data-sortable="true" data-formatter="showDateFormat1" style="vertical-align:middle;" data-class="record_date">記&emsp;錄&emsp;時&emsp;間</th>
                    <th data-field="now_pat_diagnosis" data-formatter="cpt_merge_text">診斷</th>
                    <th data-field="diagnosis" data-formatter="cpt_merge_text">入院經過</th>
                    <th data-field="cpt_history" data-formatter="cpt_merge_text" data-class="cpt_history">肺部病史</th> 
                    <th data-field="rt_reason" data-formatter="cpt_merge_text"  data-class="rt_reason" >使用呼吸器原因</th> 
                    <th data-field="brief_status" data-formatter="cpt_merge_text"  data-class="brief_status" >呼吸氣道狀況</th> 
                    <th data-field="brief_status2" data-formatter="cpt_merge_text"  data-class="brief_status2"  >呼吸器開始使用日期</th> 
                    <th data-field="smoke_history" data-formatter="cpt_merge_text" data-class="smoke_history" >抽菸史</th> 
                    <th data-field="breath_sound" data-formatter="cpt_merge_text" data-class="breath_sound" >呼吸音</th>
                    <th data-field="conscious" data-formatter="cpt_merge_text" data-class="conscious">意識：</th>
                    <th data-field="base_data" data-formatter="cpt_merge_text" data-class="base_data">體溫、脈膊、呼吸、BP</th> 
                    <th data-field="skin" data-formatter="cpt_merge_text">皮膚：</th>  
                    <th data-field="tube" data-formatter="cpt_merge_text" data-class="tube">人工氣道：</th>
                    <th data-field="machine" data-formatter="cpt_merge_text" data-class="machine">使用呼吸器：</th>
                    <th data-field="patterns" data-formatter="cpt_merge_text" data-class="patterns">呼吸型態：</th> 
                    <th data-field="cough" data-formatter="cpt_merge_text" data-class="cough">咳嗽能力：</th> 
                    <th data-field="sputum" data-formatter="cpt_merge_text"  data-class="sputum">是否需抽痰：</th>
                    <th data-field="sputum_assess" data-formatter="cpt_merge_text"  data-class="sputum_assess">痰液評估：</th>
                    <th data-field="other_history" data-formatter="cpt_merge_text" data-class="other_history">備註</th> 
                  <tr>
                </thead>
                <tbody></tbody>
            </table>
        </section>
    </div>
    <form id="cpt_pdf_blank_form" action="@(Url.Content("~/CPT/DownloadPdf_CPTPage"))" method="post" target="TheNewWindow">
        <input type="hidden" id="HtmlStrCXR2" name="HtmlStrCXR2" />
    </form>
